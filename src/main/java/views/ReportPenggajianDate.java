/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import config.DatabaseConnection;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author darwisy
 */
public class ReportPenggajianDate extends javax.swing.JPanel {

    /**
     * Creates new form ReportAbsensiDate
     */
    public ReportPenggajianDate() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dateAwal = new com.github.lgooddatepicker.components.DatePicker();
        jLabel2 = new javax.swing.JLabel();
        printReport = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        dateAkhir = new com.github.lgooddatepicker.components.DatePicker();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("REPORT");
        jLabel1.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N

        jLabel2.setText("Tanggal Awal");
        jLabel2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        printReport.setText("Cetak");
        printReport.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        printReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printReportActionPerformed(evt);
            }
        });

        jLabel3.setText("Tanggal Akhir");
        jLabel3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dateAkhir, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                    .addComponent(dateAwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(printReport))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateAwal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(printReport)
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void printReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printReportActionPerformed
       Connection conn = null;

        try {
            // 1. Validate date selection
            if (dateAwal.getDate() == null || dateAkhir.getDate() == null) {
                JOptionPane.showMessageDialog(null, 
                    "Please select both start and end dates", 
                    "Date Selection Required", 
                    JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 2. Prepare report parameters
            Map<String, Object> parameters = new HashMap<>();
            LocalDate startDate = dateAwal.getDate();
            LocalDate endDate = dateAkhir.getDate();

            // Validate date range
            if (startDate.isAfter(endDate)) {
                JOptionPane.showMessageDialog(null,
                    "Start date cannot be after end date",
                    "Invalid Date Range",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            parameters.put("awal", java.sql.Date.valueOf(startDate));
            parameters.put("akhir", java.sql.Date.valueOf(endDate));

            // 3. Get database connection
            conn = DatabaseConnection.getConnection();

            // 4. Load and compile report from resources
            InputStream reportStream = getClass().getClassLoader()
                .getResourceAsStream("reports/Penggajian.jrxml");

            if (reportStream == null) {
                JOptionPane.showMessageDialog(null,
                    "Salary report template (Penggajian.jrxml) not found",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            JasperReport jasperReport = JasperCompileManager.compileReport(reportStream);

            // 5. Fill and display report
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, conn);

            if (jasperPrint.getPages().isEmpty()) {
                JOptionPane.showMessageDialog(null,
                    "No salary data found between " + startDate + " and " + endDate,
                    "Empty Report",
                    JOptionPane.INFORMATION_MESSAGE);
            } else {
                JasperViewer viewer = new JasperViewer(jasperPrint, false);
                viewer.setTitle("Salary Report: " + startDate + " to " + endDate);
                viewer.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                viewer.setVisible(true);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,
                "Database error: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                "Failed to generate salary report: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        } finally {
            // 6. Clean up resources
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    System.err.println("Error closing connection: " + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_printReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.lgooddatepicker.components.DatePicker dateAkhir;
    private com.github.lgooddatepicker.components.DatePicker dateAwal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton printReport;
    // End of variables declaration//GEN-END:variables
}
